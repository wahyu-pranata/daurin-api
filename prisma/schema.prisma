// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  Agent
  Customer
}

enum OrderStatus {
  Pending
  OnProgress
  Success
  Canceled
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  password  String
  address   String
  city      String
  province  String
  role      UserRole
  agencyId  Int?
  agency    Agency?  @relation(fields: [agencyId], references: [id])
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Agency {
  id        Int      @id @default(autoincrement())
  name      String
  location  String
  rate      Float    @default(0)
  users     User[]
  items     Item[]
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id             Int             @id @default(autoincrement())
  name           String
  estimatedPrice Decimal
  unit           String
  agencyId       Int
  agency         Agency          @relation(fields: [agencyId], references: [id])
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  ItemsOnOrders  ItemsOnOrders[]
}

model Order {
  id               Int             @id @default(autoincrement())
  deliveryOptions  String
  status           OrderStatus     @default(Pending)
  shippingCost     Int             @default(0)
  transactionProof String          @default("")
  address          String
  rate             Int?
  customerId       Int
  customer         User            @relation(fields: [customerId], references: [id])
  agencyId         Int
  agency           Agency          @relation(fields: [agencyId], references: [id])
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  ItemsOnOrders    ItemsOnOrders[]
}

model ItemsOnOrders {
  orderId    Int
  itemId     Int
  price      Int
  image      String
  amount     Int
  assignedAt DateTime @default(now())
  orders     Order    @relation(fields: [orderId], references: [id])
  items      Item     @relation(fields: [itemId], references: [id])

  @@id([orderId, itemId])
}
